generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgres"
  url      = env("DATABASE_URL")
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "./database_erd.svg"
}

enum LessonLevel {
  A1
  A2
  B1
  B2
  C1
  C2
}

enum SubLevel {
  BEGINNER
  INTERMEDIATE
  ADVANCED
}

model Role {
  id                    Int       @id @default(autoincrement())
  title                 String
  points                Int
  managers              Manager[]
  roleDefaultPermission String[]

  isDeleted Boolean @default(false) @map("is_deleted")

  @@map("roles")
}

model Manager {
  id       Int     @id @default(autoincrement())
  publicId String  @unique @map("public_id")
  photo    String?
  name     String
  email    String
  cpf      String
  password String
  phone    String?
  birthday String?
  address  String?

  primaryColor String? @map("color_primary")
  grayColor    String? @map("color_gray")
  theme        String?

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  permissions String[]
  classroom   Classroom[]

  isDefaultPassword Boolean @default(true) @map("is_default_password")
  isActive          Boolean @default(true) @map("is_active")
  isDeleted         Boolean @default(false) @map("is_deleted")

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  LessonInstance LessonInstance[]

  @@map("managers")
}

model Student {
  id       Int     @id @default(autoincrement())
  publicId String  @unique @map("public_id")
  name     String
  email    String
  password String
  photo    String?
  phone    String?
  cpf      String?

  address     String?
  birthday    String?
  description String?

  primaryColor String? @map("color_primary")
  grayColor    String? @map("color_gray")
  theme        String?

  isDeleted Boolean @default(false) @map("is_deleted")

  isActive  Boolean  @default(true) @map("is_active")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  classrooms ClassStudent[]
  Attendance Attendance[]

  @@map("students")
}

model Classroom {
  id       Int    @id @default(autoincrement())
  publicId String @unique @map("public_id")
  name     String

  students ClassStudent[]

  teacher   Manager? @relation(fields: [teacherId], references: [id])
  teacherId Int?     @map("teacher_id")

  schedule   Schedule? @relation(fields: [scheduleId], references: [id])
  scheduleId Int?      @map("schedule_id")

  isDeleted Boolean @default(false) @map("is_deleted")

  finished Boolean @default(false)
  status   String

  createdAt      DateTime         @default(now()) @map("created_at")
  updatedAt      DateTime         @updatedAt @map("updated_at")
  LessonInstance LessonInstance[]

  @@map("classrooms")
}

model ClassStudent {
  id Int @id @default(autoincrement())

  student   Student? @relation(fields: [studentId], references: [id])
  studentId Int?     @map("student_id")

  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int       @map("classroom_id")

  isActive       Boolean  @default(true) @map("is_active")
  isDeleted      Boolean  @default(false) @map("is_deleted")
  enrollmentDate DateTime @default(now()) @map("enrollment_date")

  @@map("class_students")
}

model Schedule {
  id       Int    @id @default(autoincrement())
  publicId String @unique @map("public_id")

  name        String
  description String?

  isDefault Boolean @default(false) @map("is_default")
  isDeleted Boolean @default(false) @map("is_deleted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  lessons   Lesson[]
  classroom Classroom[]

  @@map("schedules")
}

model Lesson {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  order Int?

  level    LessonLevel @default(C1) @map("level")
  subLevel SubLevel    @default(BEGINNER) @map("sub_level")

  schedule   Schedule @relation(fields: [scheduleId], references: [id])
  scheduleId Int      @map("schedule_id")

  isDeleted Boolean @default(false) @map("is_deleted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  homework       Homework[]
  LessonInstance LessonInstance[]
  Attendance     Attendance[]

  @@map("lessons")
}

model LessonInstance {
  id       Int    @id @default(autoincrement())
  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int    @map("lesson_id")

  classroom   Classroom @relation(fields: [classroomId], references: [id])
  classroomId Int       @map("classroom_id")

  startTime DateTime @map("start_time")
  endTime   DateTime @map("end_time")

  teacher   Manager @relation(fields: [teacherId], references: [id])
  teacherId Int     @map("teacher_id")

  isDeleted Boolean @default(false) @map("is_deleted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("lesson_instances")
}

model Attendance {
  id Int @id @default(autoincrement())

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int    @map("lesson_id")

  student   Student @relation(fields: [studentId], references: [id])
  studentId Int     @map("student_id")

  isPresent Boolean @default(false) @map("is_present")
  isDeleted Boolean @default(false) @map("is_deleted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("attendances")
}

model Homework {
  id          Int    @id @default(autoincrement())
  name        String
  description String

  lesson   Lesson @relation(fields: [lessonId], references: [id])
  lessonId Int    @map("lesson_id")

  isDeleted Boolean @default(false) @map("is_deleted")

  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@map("homeworks")
}
