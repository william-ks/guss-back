generator client {
  provider = "prisma-client-js"
}

generator erd {
  provider = "prisma-erd-generator"
  output   = "../ERD.svg"
}

datasource db {
  // provider = "postgresql"
  provider = "sqlite"
  url      = env("DATABASE_URL")
}

model Permission {
  id                    Int                     @id @default(autoincrement())
  name                  String
  code                  String                  @unique
  managerPermission     ManagerPermission[]
  roleDefaultPermission RoleDefaultPermission[]

  @@map("permissions")
}

model ManagerPermission {
  id Int @id @default(autoincrement())

  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int        @map("permission_id")

  manager   Manager @relation(fields: [managerId], references: [id])
  managerId Int     @map("manager_id")

  @@map("manager_permissions")
}

model RoleDefaultPermission {
  id Int @id @default(autoincrement())

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  permission   Permission @relation(fields: [permissionId], references: [id])
  permissionId Int        @map("permission_id")

  @@map("role_defalut_permissions")
}

model Role {
  id                    Int                     @id @default(autoincrement())
  title                 String
  managers              Manager[]
  roleDefaultPermission RoleDefaultPermission[]

  @@map("roles")
}

model Manager {
  id        Int     @id @default(autoincrement())
  public_id String  @unique
  photo     String?
  name      String
  email     String
  password  String
  birthday  String?
  cpf       String?

  role   Role @relation(fields: [roleId], references: [id])
  roleId Int  @map("role_id")

  isActive   Boolean  @default(true) @map("is_active")
  started_at DateTime @default(now())

  permissions ManagerPermission[]

  @@map("managers")
}

model Student {
  id         Int     @id @default(autoincrement())
  public_id  String  @unique
  name       String
  email      String
  password   String
  phone      String?
  cpf        String?
  birthday   String?
  class_time String?

  isActive   Boolean  @map("is_active")
  started_at DateTime @default(now())

  @@map("students")
}
